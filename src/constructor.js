
Number.SE = function(number){
	if(!(this instanceof Number.SE)) return new Number.SE(number);
	this.number = Number.SE.normalize(number);
};

// Constants (Numbers to 10,000 places)
Number.SE.VERSION		= '{{ VERSION }}';
Number.SE.PRECISION		= 1000;
Number.SE.PI			= "3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226806613001927876611195909216420198938095257201065485863278865936153381827968230301952035301852968995773622599413891249721775283479131515574857242454150695950829533116861727855889075098381754637464939319255060400927701671139009848824012858361603563707660104710181942955596198946767837449448255379774726847104047534646208046684259069491293313677028989152104752162056966024058038150193511253382430035587640247496473263914199272604269922796782354781636009341721641219924586315030286182974555706749838505494588586926995690927210797509302955321165344987202755960236480665499119881834797753566369807426542527862551818417574672890977772793800081647060016145249192173217214772350141441973568548161361157352552133475741849468438523323907394143334547762416862518983569485562099219222184272550254256887671790494601653466804988627232791786085784383827967976681454100953883786360950680064225125205117392984896084128488626945604241965285022210661186306744278622039194945047123713786960956364371917287467764657573962413890865832645995813390478027590099465764078951269468398352595709825822620522489407726719478268482601476990902640136394437455305068203496252451749399651431429809190659250937221696461515709858387410597885959772975498930161753928468138268683868942774155991855925245953959431049972524680845987273644695848653836736222626099124608051243884390451244136549762780797715691435997700129616089441694868555848406353422072225828488648158456028506016842739452267467678895252138522549954666727823986456596116354886230577456498035593634568174324112515076069479451096596094025228879710893145669136867228748940560101503308617928680920874760917824938589009714909675985261365549781893129784821682998948722658804857564014270477555132379641451523746234364542858444795265867821051141354735739523113427166102135969536231442952484937187110145765403590279934403742007310578539062198387447808478489683321445713868751943506430218453191048481005370614680674919278191197939952061419663428754440643745123718192179998391015919561814675142691239748940907186494231961567945208095146550225231603881930142093762137855956638937787083039069792077346722182562599661501421503068038447734549202605414665925201497442850732518666002132434088190710486331734649651453905796268561005508106658796998163574736384052571459102897064140110971206280439039759515677157700420337869936007230558763176359421873125147120532928191826186125867321579198414848829164470609575270695722091756711672291098169091528017350671274858322287183520935396572512108357915136988209144421006751033467110314126711136990865851639831501970165151168517143765761835155650884909989859982387345528331635507647918535893226185489632132933089857064204675259070915481416549859461637180270981994309924488957571282890592323326097299712084433573265489382391193259746366730583604142813883032038249037589852437441702913276561809377344403070746921120191302033038019762110110044929321516084244485963766983895228684783123552658213144957685726243344189303968642624341077322697802807318915441101044682325271620105265227211166039666557309254711055785376346682065310989652691862056476931257058635662018558100729360659876486117910453348850346113657686753249441668039626579787718556084552965412665408530614344431858676975145661406800700237877659134401712749470420562230538994561314071127000407854733269939081454664645880797270826683063432858785698305235808933065757406795457163775254202114955761581400250126228594130216471550979259230990796547376125517656751357517829666454779174501129961489030463994713296210734043751895735961458901938971311179042978285647503203198691514028708085990480109412147221317947647772622414254854540332157185306142288137585043063321751829798662237172159160771669254748738986654949450114654062843366393790039769265672146385306736096571209180763832716641627488880078692560290228472104031721186082041900042296617119637792133757511495950156604963186294726547364252308177036751590673502350728354056704038674351362222477158915049530984448933309634087807693259939780541934144737744184263129860809988868741326047215695162396586457302163159819319516735381297416772947867242292465436680098067692823828068996400482435403701416314965897940924323789690706977942236250822168895738379862300159377647165122893578601588161755782973523344604281512627203734314653197777416031990665541876397929334419521541341899485444734567383162499341913181480927777103863877343177207545654532207770921201905166096280490926360197598828161332316663652861932668633606273567630354477628035045077723554710585954870279081435624014517180624643626794561275318134078330336254232783944975382437205835311477119926063813346776879695970309833913077109870408591337464144282277263465947047458784778720192771528073176790770715721344473060570073349243693113835049316312840425121925651798069411352801314701304781643788518529092854520116583934196562134914341595625865865570552690496520985803385072242648293972858478316305777756068887644624824685792603953527734803048029005876075825104747091643961362676044925627420420832085661190625454337213153595845068772460290161876679524061634252257719542916299193064553779914037340432875262888963995879475729174642635745525407909145135711136941091193932519107602082520261879853188770584297259167781314969900901921169717372784768472686084900337702424291651300500516832336435038951702989392233451722013812806965011784408745196012122859937162313017114448464090389064495444006198690754851602632750529834918740786680881833851022833450850486082503930213321971551843063545500766828294930413776552793975175461395398468339363830474611996653858153842056853386218672523340283087112328278921250771262946322956398989893582116745627010218356462201349671518819097303811980049734072396103685406643193950979019069963955245300545058068550195673022921913933918568034490398205955100226353536192041994745538593810234395544959778377902374216172711172364343543947822181852862408514006660443325888569867054315470696574745855033232334210730154594051655379068662733379958511562578432298827372319898757141595781119635833005940873068121602876496286744604774649159950549737425626901049037781986835938146574126804925648798556145372347867330390468838343634655379498641927056387293174872332083760112302991136793862708943879936201629515413371424892830722012690147546684765357616477379467520049075715552781965362132392640616013635815590742202020318727760527721900556148425551879253034351398442532234157623361064250639049750086562710953591946589751413103482276930624743536325691607815478181152843667957061108615331504452127473924544945423682886061340841486377670096120715124914043027253860764823634143346235189757664521641376796903149501910857598442391986291642193994907236234646844117394032659184044378051333894525742399508296591228508555821572503107125701266830240292952522011872676756220415420516184163484756516999811614101002996078386909291603028840026910414079288621507842451670908700069928212066041837180653556725253256753286129104248776182582976515795984703562226293486003415872298053498965022629174878820273420922224533985626476691490556284250391275771028402799806636582548892648802545661017296702664076559042909945681506526530537182941270336931378517860904070866711496558343434769338578171138645587367812301458768712660348913909562009939361031029161615288138437909904231747336394804575931493140529763475748119356709110137751721008031559024853090669203767192203322909433467685142214477379393751703443661991040337511173547191855046449026365512816228824462575916333039107225383742182140883508657391771509682887478265699599574490661758344137522397096834080053559849175417381883999446974867626551658276584835884531427756879002909517028352971634456212964043523117600665101241200659755851276178583829204197484423608007193045761893234922927965019875187212726750798125547095890455635792122103334669749923563025494780249011419521238281530911407907386025152274299581807247162591668545133312394804947079119153267343028244186041426363954800044800267049624820179289647669758318327131425170296923488962766844032326092752496035799646925650493681836090032380929345958897069536534940603402166544375589004563288225054525564056448246515187547119621844396582533754388569094113031509526179378002974120766514793942590298969594699556576121865619673378623625612521632086286922210327488921865436480229678070576561514463204692790682120738837781423356282360896320806822246801224826117718589638140918390367367222088832151375560037279839400415297002878307667094447456013455641725437090697939612257142989467154357846878861444581231459357198492252847160504922124247014121478057345510500801908699603302763478708108175450119307141223390866393833952942578690507643100638351983438934159613185434754649556978103829309716465143840700707360411237359984345225161050702705623526601276484830840761183013052793205427462865403603674532865105706587488225698157936789766974220575059683440869735020141020672358502007245225632651341055924019027421624843914035998953539459094407046912091409387001264560016237428802109276457931065792295524988727584610126483699989225695968815920560010165525637567";
Number.SE.RAD_PER_DEG	= '.0174532925199432957692369076848861271344287188854172545609719144017100911460344944368224156963450948221230449250737905924838546922752810123984742189340471173191682450150107695616975535812386053051687886912711720870329635896026424901877043509181733439396980475940192241589469684813789632978181124952292984699278144795310454160084495609046069671761964687105143908889518362808267803695632452608441195089412947626131431088441838454784298996256210728062141559692354442374975963993652929160623774343500663840546315186802258702393667855274799734707621705676658941316820585512065349620930688037489914870522507333364895952514642268210320630153210533842979843262303802272290275190563697199187280599571093847717974556664228451612331159113023231100757209709517220028817067297222222131832113886169985096267560906588612469969741494905702362350458519149168625662843787278333507657708493699307400465634478732092730405755458527246041970485064420159104575210421875108765658765585120623711478500107104256177550512023344385449736511170304770182159218675187879331568350108446405658498277542979033300771736095654182415507306420825402358563927552823862950936762658660504172132319702081385517736392244495983426174389436045778492131200197983758894706121219053088677719264879858302680854431929269283558196369233780371347726082849628537612721619561375120114275890225446563899639514076801668643757791527581847995233292922459440155376797487868667185651202289995810350835015899054141983708324361416366032607055316162622822083850164184509185832622375331124248925861062215657488764087020544857030140436808434356531926271720987377433337869281112008069399565178734154019452302331864919342297842075141785193096769414913251295772633007963030431245381251054642749197894401067899126252791903160426210583033425192600277145957377321449210243545998220926747450052993543686719482225790284733617632943605338007138257052533568998071390122814510350374682145668844163613729095210386719798020662071525986925420775689660603657369221989632804334866116636986893275070526022130699761656990145584582744873706637681582366748721716813340910802080850281566860902913986077758412857211621703291718734538692306428325465967255438108876276416607231208551581563237149103830154119777325329180330775523947220695815602554848535816436036324263123479227729144891735771355025069118697209043377650871746444316673867560524538603808658244797412337345879360480453247557139223157929969570414871049736229917919441925929323554803144228686382568365414249890866313031565240228473059781637747283144227445846048872827396981618714846041607808894527961589884926717826375606545829921611650828315332514520308321216284988045649055497151258822492086889681693197507354424525084652568575807936580266403659323391730075263096640172968175894563109418679524608471385399283896986966866126663022430111517254363281233243747100471027204628969206326041774639246123247399502693389187256371148606626566177663330670078870190486357813541395762121787777688389773308989704174593957763830050399249679553420441400449730363901401755771218341227431229880886479940988171279948321782074817899031255536750078972392668802651919400144745259218066749857936151806592555674024116010595027018429702758414105877570475611417117036599833231309707576891809525505716503563339498400348913279986639759842094467796548329778179475486843131078992951397062251829343990343673659295643288800824934953581700531959483095671764261759571727676060640445408370626381017904843528940855365139561575439729832678285801167041724081506128562595063166159213979990638998342508398250952431431213064202826939443881110132630307129535305980439918660734788082757340718504992059122481958837273082300919436636757621126165666350551360497642849049477351295894294428449135198514749410132844069985909262810200230156326835113236057643880690968983495182031211632074689059485940062232850112946556653450561669162740084226902471442431499105290482487951308481011841386538095902408010516887146812463393184594322378184384191172280260129181756672514734845064779981475406069706169765854241482336961721647371770114248718403169924203445475450040520036659804784328358519380574784092093708513857870446645921099317697560252942522925856029478574690658815387508092300377816679882092174133428486081690031235029944142295226173722244880818514996615636370258104488737268149059079603265872128068656051836986522599747620209736344561941986754522236118123810785012026197276625512832822030409784750980930630973212759247487731916729442304946136888595183122818557986216429775636605663276183954391276571424861289066593973001594893666137783856230401184330424876256800791936363351786510294785682674310280170184541768322147902065119953376203847486041054814163858339703003491298132988335542736981785910294818672031733843375768484257868193826671038475571679359561335095621449002327780127589839979877340764306194219453144720177016373697075791794898724263977259639019484908558705779926352853456804286606391640610247162961646338211538514441098918996341374319121347951658933888270485629224845316397910921469850120175545517750929743405412042941548180127359190926672114871823546003833133360135300205634239720327663384684654982817054330124236156787160874354436794453298758175840160754366754897875321276306852478015639590400207461925177654300890666148085659799884963023306752296772193635818587076842361074550732304495987616881326519065400419203029567098384511216953672015582829242233199934897851795370202936774037146311459642646130804312668613615429086372810330826126615635312445250954479146868155253404184340782129463125235154663609743468733657517304284440336878519265382205331683879661837617215022699518748008015682070192552613747710265484455153973781843155042817540074692947809448519402427395213058295350713356951218091766559411741822295261183598980210473251616269695562032440788697896384130088645881436976141816138695610322410281791258238554047693239794765430892715980256934704766255775195985266836001611437559768061374838424664520148669162534856690046226981177256969685400730755324726042914460564548704418003424125125428863495349955170252987773002074468493070160497999771081984954146813096973633772730285317285385616177440695505977893473347882214066042810238736620432295276105605662287206520710264915149226938907650134682869516694473157352024168830650166077346302873445211822609167321356041399778451269996509017389839691581338354948027524667011038375269533479597251657495485599260048990769501268525047249226805773900740109530657947974750042601571940578543141821887509747855299914907742435026367333147436564102336491854789926251296682393728462682162291709514608129053133277216310117596979278345464247900074981751045505405767332224985226244227982522591288552832167726109108624738919169892697233092945717884107439920446360577678108616679241863121780110819196588545013021974719987687661243012009595065131352419108212343436270133806333703357962549364992614128637260920819214168512907456151675255225091965503814596298886583975698801794379298462216597618977543395535324055885604059340089048694238152478043036064441697207634757050058279876777046441008143007044718091599919785854019325962799470491019090814187749924551503132627398604018449097784016832840932992372719104440900090528634076190271823929000705008197038042519867582076637084447170873086265664742340688480034222979767532819011223351040431140428994475341579197326625168575077691251790786534631170236146613875004809039497421774810541745172415682051701374640906982867100859898952935759330947839367518416914007081884696941412426827003407824527020981672006706395828557945958547820267979674630346399430981362313409822050174972328380977691243999238424566333050402013035935784299668481065780243225074105251430133306016477290472697545642916839284761181490568905164029000659593153123356412250899120193597584277767311894500166448799272738422390491112606134115516034528213469537272705559440456225891213176702975373625180930738118283569376454587943139766443594642345905193666856437349891861053612368287493267792967829012474110312582038416142015791688404209501577933322590921252716258266808092278738705703559808835717219204528140362807621274515018718409917658939115048150638697685746376074365453952146977075989572303264928481130495217197889441075612834953423071563246550550235097074244155809773971841140542415319339964261617229875095611557308834714060592733542621789073494968525982507900804298855208427969092332835574306176308177325280358279242528489790490247920884240724394845854652343452271306036521765083871271526570316644420805036764352452084577616490782225197769398634298993555524831937090363981015365824215807301542048833494973168241831757469789609113529062088925838957844481097547293121032434955788749134644889288502542327401940162664723326399289595930599895863727549469757544006783518592763884642390305265569389523306735460085050633772632556952904127754544847064588426030285184021933608171062175181519057124677002301464664155558044459280534712232182758203875462129285079176127606860497931491335129227375138668655535940313916315657560557354496074775494281640918607811300120363576421611364627123614140309114247124806399308173312324688699029653021587171895168417195898854333498562264806377441255016609421927753143117881423315187701312534028979560349273456129304940103635360012759892809808973025733594043926784485490987856853126797827573378156791488956934784317699424341162132798187067893824008409753335404435522245294277937683759283024858667414202318079838372107756236507943859286353213715492302476735081075399916236269286694717895791500784526558741417250044550483311294597971039339343080562183730067966159244101886274587705028202394479908443524385231089621413041924975387672434961650914730213372261520022846519999130290286725039039201307033404249157268931176834058488511412636825855755759696270283650365971568094342107599431498567809725537968937207501118945592908805667069179201813963391995778834856756935773001999941863303283022613717338411632611181364445346523822339404247662836988460862499373754700562582427777179205331600884475556120306979864';
// Number.SE.DEG_PER_RAD = 10000 places... Number.SE(180).divideBy(Number.SE.PI);

Number.SE.fromENotation = function (n) {
	var n = n.toString();
	n = n.toUpperCase();
	if (!~n.indexOf('E')) return n;
	var p = n.split('E');
	var right = true;
	var sign = p[1].substr(0, 1);
	if (sign === "-") right = false;
	if (sign === "-" || sign === "+") p[1] = p[1].substr(1);
	var places = Number(p[1]);
	var val = p[0];
	if (!~val.indexOf(".")) val += ".";
	while (places--) {
		var pos = val.indexOf(".");
		val = val.replace(/\./g, '');
		if (right) {
			if (val.length === pos) val += "0";
			pos++;
		} else {
			if (pos === 0) val = "0" + val;
			else pos--;
		}
		val = val.substr(0, pos) + "." + val.substr(pos);
	}
	return val;
};

Number.SE.normalize = function(number){
	if(!number) number = 0;
	if(typeof number !== "string" && typeof number !== "number" && !(number instanceof Number.SE)){
		throw new Error("SE Contrstructor requires a number or string");
	}
	const trimTrailingZeroes = n=> ~n.indexOf(".")&&(n.substr(-1)==="0"||n.substr(-1)===".")?trimTrailingZeroes(n.substr(0,n.length-1)):n;
	const trimLeadingZeroes = n=> n.substr(0,1)==="0"?trimLeadingZeroes(n.substr(1)):n;
	var n = typeof number === "string" ? number : number instanceof Number.SE ? number.number : number.toString();
	n = n.trim();
	if(~n.toUpperCase().indexOf("E")) n = Number.SE.fromENotation(n);
	if(n.substr(-1) === ".") n = n.substr(0, n.length-1);
	if(!number || number==".") number = "0";
	if(!/^[-+]?([0-9]*\.[0-9]+|[0-9]+)$/.test(n)) throw new Error("SE Contrstructor requires a valid numeric string");
	if(n.substr(0,1) === "+") n = n.substr(1);
	var isNegative = n.substr(0,1) === "-";
	if(isNegative) n = n.substr(1);
	n = trimTrailingZeroes(trimLeadingZeroes(n));
	if(""===n) isNegative=false;
	return n ? isNegative ? "-"+n : n : "0";
};

Number.SE.max = function(){
	var args = Array.from(arguments);
	if(args.length === 1){
		return args[0] instanceof Number.SE ? args[0] : Number.SE(args[0]);
	}else if(args.length > 2){
		var max = 0;
		for(var i=0; i<args.length; i++) max = Number.SE.max(max, args[i]);
		return max;
	}else{
		var number1 = args[0];
		var number2 = args[1];
		if(!(number1 instanceof Number.SE)) number1 = new Number.SE(number1);
		if(!(number2 instanceof Number.SE)) number2 = new Number.SE(number2);
		if(number1.isNegative() && !number2.isNegative()) return number2;
		if(!number1.isNegative() && number2.isNegative()) return number1;
		return number1.greaterThan(number2) ? number1 : number2;
	}
};

Number.SE.min = function(){
	var args = Array.from(arguments);
	if(args.length === 1){
		return args[0] instanceof Number.SE ? args[0] : Number.SE(args[0]);
	}else if(args.length > 2){
		var min = 0;
		for(var i=0; i<args.length; i++) min = Number.SE.min(min, args[i]);
		return min;
	}else{
		var number1 = args[0];
		var number2 = args[1];
		if(!(number1 instanceof Number.SE)) number1 = new Number.SE(number1);
		if(!(number2 instanceof Number.SE)) number2 = new Number.SE(number2);
		if(number1.isNegative() && !number2.isNegative()) return number1;
		if(!number1.isNegative() && number2.isNegative()) return number2;
		return number1.greaterThan(number2) ? number2 : number1;
	}
};

Number.SE.alignDecimals = function(number1, number2){
	number1 = new Number.SE(number1);
	number2 = new Number.SE(number2);
	var is1neg = number1.isNegative();
	var is2neg = number2.isNegative();
	number1.number = number1.abs().number; 
	number2.number = number2.abs().number;
	const getDecimalPosit = n=>~n.number.indexOf(".") ? n.number.indexOf(".") : n.number.length;
	const addLeadingZeros = (n, dif)=>"0".repeat(dif)+n.number;
	const addTrailingZeros = (n, dif)=>n.number+"0".repeat(dif);
	const postDecimalLength = n=>~n.indexOf(".")?n.length-n.indexOf(".")-1:0;
	var dpos1 = getDecimalPosit(number1);
	var dpos2 = getDecimalPosit(number2);
	if(dpos1 > dpos2) number2.number = addLeadingZeros(number2, dpos1-dpos2);
	if(dpos2 > dpos1) number1.number = addLeadingZeros(number1, dpos2-dpos1);
	var pdl1 = postDecimalLength(number1.number);
	var pdl2 = postDecimalLength(number2.number);
	if(~number1.number.indexOf(".") && !~number2.number.indexOf(".")) number2.number+=".";
	if(~number2.number.indexOf(".") && !~number1.number.indexOf(".")) number1.number+=".";
	if(pdl1 > pdl2) number2.number = addTrailingZeros(number2, pdl1-pdl2);
	if(pdl2 > pdl1) number1.number = addTrailingZeros(number1, pdl2-pdl1);
	if(is1neg) number1.number = "-"+number1.number;
	if(is2neg) number2.number = "-"+number2.number;
	return [number1, number2];
};

Number.SE.greatestCommonDivisor = function(a, b){
	a = Number.SE(a);
	b = Number.SE(b);
	var y = Number.SE(0), x = Number.SE(0), temp;
	if (a.greaterThan(b)) { x = a; y = b; } 
	else { x = b; y = a; }
	while (x.mod(y).number !== "0") {
		temp = x;
		x = y;
		y = temp.mod(x);
	}
	return y;
};

Number.SE.toFraction = function (number) {
	number = Number.SE(number).number;
	if (!~number.indexOf(".")) return {numerator: number, denominator: "1"};
	var n = number.split(".");
	var denominator = "1"+("0".repeat(n[1].length));
	var numerator = Number.SE(n[0]?n[0]:0).multiplyBy(denominator).add(n[1]).number;
	var gcd = Number.SE.greatestCommonDivisor(denominator, numerator);
	denominator = Number.SE(denominator).divideBy(gcd);
	numerator = Number.SE(numerator).divideBy(gcd);
	return {numerator: numerator, denominator: denominator};
};